{"version":3,"file":"static/js/740.ccbc6e7c.chunk.js","mappings":"2LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAqF,wB,SCiBrF,EAfkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,eAAIJ,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAUI,MAAO,CAAEC,KAAMR,GAAYS,GAAE,kBAAaJ,GAArE,SACGC,KAFyBD,EADpB,KASjB,C,qICfD,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA4E,kB,SC+B5E,EA7Ba,SAAC,GAAyB,IAAvBK,EAAsB,EAAtBA,gBACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMX,UAAWC,EAAUW,SAXR,SAAAC,GACnBA,EAAEC,iBAEFN,EAAgB,CAAEE,MAAAA,GACnB,EAOC,WACE,kBAAQV,UAAWC,EACjBc,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOR,EACPS,SAXqB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACtCP,EAASO,EACV,KAWG,mBAASlB,UAAWC,EAASc,KAAK,SAASM,UAAWX,EAAtD,sBAKL,E,SCID,EA3Be,WACb,OAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KAiBA,OAfAiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBH,GAFxB,OAET7B,EAFS,OAGfyB,EAAUzB,GAHK,gDAKfiC,QAAQC,IAAR,MALe,yDAAH,qDAQhBH,GAVyB,CAW1B,GAAE,CAACJ,KAGF,iCACE,SAAC,EAAD,CAAMhB,gBAAiBA,IACtBX,EAAOmC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWpC,OAAQA,MAG9C,C,uKC9BKqC,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJiB,uBACvBC,EADuB,EACvBA,KADuB,kBAQxBA,EAAKC,SARmB,2CAAH,qDAWjBC,EAAkB,mCAAG,WAAMxC,GAAN,yFACTkC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B/B,GAAM,CACzDmC,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,uBACxBC,EADwB,EACxBA,KADwB,kBAQzBA,GARyB,2CAAH,sDAWlBG,EAAkB,mCAAG,WAAMzC,GAAN,yFACTkC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8B/B,EAA9B,YAA4C,CACjEmC,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,uBACxBC,EADwB,EACxBA,KADwB,kBAQzBA,EAAKI,MARoB,2CAAH,sDAsBlBhB,EAAiB,mCAAG,WAAMnB,GAAN,yFACR2B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACV9B,MAAOA,KALoB,uBACvB+B,EADuB,EACvBA,KADuB,kBASxBA,EAAKC,SATmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"link\":\"MovieList_link__+cn-g\"};","import { useLocation, Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, original_title }) => (\n        <li className={css.item} key={id}>\n          <Link className={css.link} state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","import { useState } from 'react';\nimport css from './Form.module.css'\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input  className={css.input} \n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <button  className={css.btn} type=\"submit\" disabled={!query}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Form;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesSearch } from 'services/movie-api';\n\nimport Form from 'components/Form/Form';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovie = async () => {\n      try {\n        const movies = await fetchMoviesSearch(currentQuery);\n        setMovies(movies);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovie();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f48006f1c293d69c1d3e6663b29e8d0';\n\nexport const getMoviesTrending = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMoviesSearch = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return data.results;\n};"],"names":["movies","location","useLocation","className","css","map","id","original_title","state","from","to","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchMovie","fetchMoviesSearch","console","log","length","MovieList","BASE_URL","KEY","getMoviesTrending","axios","params","api_key","language","data","results","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}