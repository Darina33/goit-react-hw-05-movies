{"version":3,"file":"static/js/186.bec87f72.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAkBP,GAFvB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBJ,GACD,GAAE,CAACN,IAEsB,IAAnBG,EAAQQ,QACb,wDAEA,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BACE,sCAAqBD,MAEvB,uBAAIC,MAJGF,EADE,KAUlB,C,uKChCKG,EAAW,gCACXC,EAAM,mCAECC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJiB,uBACvBC,EADuB,EACvBA,KADuB,kBAQxBA,EAAKC,SARmB,2CAAH,qDAWjBC,EAAkB,mCAAG,WAAMZ,GAAN,yFACTM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,GAAM,CACzDO,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,uBACxBC,EADwB,EACxBA,KADwB,kBAQzBA,GARyB,2CAAH,sDAWlBG,EAAkB,mCAAG,WAAMb,GAAN,yFACTM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BH,EAA9B,YAA4C,CACjEO,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAJkB,uBACxBC,EADwB,EACxBA,KADwB,kBAQzBA,EAAKI,MARoB,2CAAH,sDAsBlBpB,EAAiB,mCAAG,WAAMqB,GAAN,yFACRT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,gBAAqC,CAC1DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVM,MAAOA,KALoB,uBACvBL,EADuB,EACvBA,KADuB,kBASxBA,EAAKC,SATmB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/movie-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesSearch  } from 'services/movie-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const Reviews = await fetchMoviesSearch(movieId);\n        setReviews(Reviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <p>Sorry, there are no reviews</p>\n  ) : (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <p>\n            <span>Author:</span>{author}\n          </p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f48006f1c293d69c1d3e6663b29e8d0';\n\nexport const getMoviesTrending = async () => {\n  const { data } = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMoviesSearch = async query => {\n  const { data } = await axios.get(`${BASE_URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      query: query,\n    },\n  });\n\n  return data.results;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","fetchMoviesSearch","Reviews","console","log","length","map","id","author","content","BASE_URL","KEY","getMoviesTrending","axios","params","api_key","language","data","results","fetchMoviesDetails","fetchMoviesCredits","cast","query"],"sourceRoot":""}